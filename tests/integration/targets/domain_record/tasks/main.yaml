- name: domain_record
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Create domain
      linode.cloud.domain:
        domain: 'ansible-test-domain-{{ r }}.com'
        soa_email: 'realemail@example.com'
        type: 'master'
        state: present
      register: domain_create

    - name: Assert domain is created
      assert:
        that:
          - domain_create.domain.soa_email == 'realemail@example.com'
          - domain_create.domain.status == 'active'
          - domain_create.domain.type == 'master'

    - name: Create domain_record
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        name: 'sub'
        type: 'A'
        target: '127.0.0.1'
        ttl_sec: 3600
        weight: 55
        state: present
      register: record_create

    - name: Assert domain_record is created
      assert:
        that:
          - record_create.record.name == 'sub'
          - record_create.record.type == 'A'
          - record_create.record.target == '127.0.0.1'
          - record_create.record.ttl_sec == 3600
          - record_create.record.weight == 55

    - name: Update domain_record
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        record_id: '{{ record_create.record.id }}'
        ttl_sec: 14400
        weight: 62
        state: present
      register: record_update

    - name: Assert domain_record is updated
      assert:
        that:
          - record_update.record.id == record_create.record.id
          - record_update.record.name == 'sub'
          - record_update.record.type == 'A'
          - record_update.record.target == '127.0.0.1'
          - record_update.record.ttl_sec == 14400
          - record_update.record.weight == 62

    - name: Get domain_record_info
      linode.cloud.domain_record_info:
        domain: '{{ domain_create.domain.domain }}'
        name: '{{ record_create.record.name }}'
      register: record_info

    - name: Assert get domain_record_info
      assert:
        that:
          - record_info.record[0].name == 'sub'
          - record_info.record[0].type == 'A'
          - record_info.record[0].target == '127.0.0.1'
          - record_info.record[0].ttl_sec == 14400
          - record_info.record[0].weight == 62

    - name: Get domain_record_info by id
      linode.cloud.domain_record_info:
        domain: '{{ domain_create.domain.domain }}'
        id: '{{ record_create.record.id }}'
      register: record_info_id

    - name: Assert get domain_record_info by id
      assert:
        that:
          - record_info_id.record[0].name == 'sub'
          - record_info_id.record[0].type == 'A'
          - record_info_id.record[0].target == '127.0.0.1'
          - record_info_id.record[0].ttl_sec == 14400
          - record_info_id.record[0].weight == 62

    - name: Get domain_record_info with both domain_id and domain
      linode.cloud.domain_record_info:
        domain: '{{ domain_create.domain.domain }}'
        domain_id: '{{ domain_create.domain.id }}'
        id: '{{ record_create.record.id }}'
      register: info_mutually_exclusive
      failed_when: '"mutually exclusive" not in info_mutually_exclusive.msg'

    - name: Get domain_record_info with neither domain_id nor domain
      linode.cloud.domain_record_info:
        id: '{{ record_create.record.id }}'
      register: info_one_of
      failed_when: '"one of the following" not in info_one_of.msg'

    - name: Create domain_record with domain id
      linode.cloud.domain_record:
        domain_id: '{{ domain_create.domain.id }}'
        name: 'cool'
        type: 'TXT'
        target: 'cool'
        ttl_sec: 7200
        weight: 32
        state: present
      register: record2_create

    - name: Assert domain_record is created with domain id
      assert:
        that:
          - record2_create.record.name == 'cool'
          - record2_create.record.type == 'TXT'
          - record2_create.record.target == 'cool'
          - record2_create.record.ttl_sec == 7200
          - record2_create.record.weight == 32

    - name: Create duplicate domain_record with different target
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        name: 'sub'
        type: 'A'
        target: '127.0.0.2'
        ttl_sec: 3600
        weight: 55
        state: present
      register: record_dupe_create

    - name: Assert duplicate domain_record is created with different target
      assert:
        that:
          - record_dupe_create.record.name == 'sub'
          - record_dupe_create.record.type == 'A'
          - record_dupe_create.record.target == '127.0.0.2'
          - record_dupe_create.record.ttl_sec == 3600
          - record_dupe_create.record.weight == 55

    - name: Update domain_record by id
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        record_id: '{{ record_dupe_create.record.id }}'
        ttl_sec: 300
        weight: 55
        state: present
      register: record_dupe_update

    - name: Assert domain_record is updated by id
      assert:
        that:
          - record_dupe_update.changed == true
          - record_dupe_update.record.name == 'sub'
          - record_dupe_update.record.type == 'A'
          - record_dupe_update.record.target == '127.0.0.2'
          - record_dupe_update.record.ttl_sec == 300
          - record_dupe_update.record.weight == 55

    - name: Create an SRV domain record
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        service: carddavs
        protocol: tcp
        type: "SRV"
        target: host.example.com
        port: 443
        priority: 0
        weight: 1
        state: present
      register: srv_create

    - name: Assert SRV record is created
      assert:
        that:
          - srv_create.record.type == 'SRV'

    - name: Get domain_info
      linode.cloud.domain_info:
        domain: '{{ domain_create.domain.domain }}'
      register: domain_info

    - name: Assert domain_info response
      assert:
        that:
          - domain_info.records|length == 4

    - name: Create domain_record containing FQDN
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        name: 'fqdn.{{ domain_create.domain.domain }}'
        type: 'A'
        target: '127.0.0.2'
        state: present
      register: record_fqdn_create

    - name: Assert domain_record is created containing FQDN
      assert:
        that:
          - record_fqdn_create.record.name == 'fqdn'
          - record_fqdn_create.changed

    - name: Create second domain_record containing FQDN
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        name: 'fqdn.{{ domain_create.domain.domain }}'
        type: 'A'
        target: '127.0.0.2'
        state: present
      register: record_fqdn_nochange

    - name: Assert second domain_record is created containing FQDN
      assert:
        that:
          - record_fqdn_nochange.record.name == 'fqdn'
          - record_fqdn_nochange.changed == False

    - name: Delete domain_record containing FQDN
      linode.cloud.domain_record:
        domain: '{{ domain_create.domain.domain }}'
        name: 'fqdn.{{ domain_create.domain.domain }}'
        type: 'A'
        target: '127.0.0.2'
        state: absent
      register: record_fqdn_delete

    - name: Assert domain_record containing FQDN is deleted
      assert:
        that:
          - record_fqdn_delete.record.name == 'fqdn'
          - record_fqdn_delete.changed

  always:
    - ignore_errors: yes
      block:
        - name: Delete domain_record
          linode.cloud.domain_record:            
            domain: '{{ domain_create.domain.domain }}'
            record_id: '{{ record_create.record.id }}'
            state: absent
          register: record_delete

        - name: Assert domain_record is deleted
          assert:
            that:
              - record_delete.changed
              - record_delete.record.id == record_create.record.id

        - name: Delete second domain_record
          linode.cloud.domain_record:            
            domain: '{{ domain_create.domain.domain }}'
            name: '{{ record2_create.record.name }}'
            type: '{{ record2_create.record.type }}'
            target: '{{ record2_create.record.target }}'
            state: absent
          register: record2_delete

        - name: Assert second domain_record is deleted
          assert:
            that:
              - record2_delete.changed
              - record2_delete.record.id == record2_create.record.id

        - name: Delete duplicated domain_record
          linode.cloud.domain_record:            
            domain: '{{ domain_create.domain.domain }}'
            record_id: '{{ record_dupe_create.record.id }}'
            state: absent
          register: record_dupe_delete

        - name: Assert duplicated domain_record is deleted
          assert:
            that:
              - record_dupe_delete.changed
              - record_dupe_delete.record.id == record_dupe_create.record.id

        - name: Delete SRV domain_record
          linode.cloud.domain_record:
            domain: '{{ domain_create.domain.domain }}'
            record_id: '{{ srv_create.record.id }}'
            state: absent
          register: srv_record_delete

        - name: Assert SRV domain_record is deleted
          assert:
            that:
              - srv_record_delete.changed
              - srv_record_delete.record.id == srv_create.record.id

        - name: Delete domain
          linode.cloud.domain:            
            domain: '{{ domain_create.domain.domain }}'
            state: absent
          register: domain_delete

        - name: Assert domain is deleted
          assert:
            that:
              - domain_delete.changed
              - domain_delete.domain.id == domain_create.domain.id
  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'

