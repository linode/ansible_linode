- name: nodebalancer_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: create empty nodebalancer
      linode.cloud.nodebalancer:
        label: 'ansible-test-empty-{{ r }}'
        region: us-ord
        state: present
        firewall_id: '{{ firewall_id }}'
      register: create_empty_nodebalancer

    - name: Assert empty NodeBalancer is created
      assert:
        that:
          - create_empty_nodebalancer.changed
          - create_empty_nodebalancer.configs|length == 0

    - name: update empty nodebalancer
      linode.cloud.nodebalancer:
        label: '{{ create_empty_nodebalancer.node_balancer.label }}'
        region: us-ord
        client_conn_throttle: 6
        state: present
      register: update_empty_nodebalancer

    - name: Assert empty NodeBalancer is updated
      assert:
        that:
          - update_empty_nodebalancer.changed
          - update_empty_nodebalancer.node_balancer.client_conn_throttle == 6

    - name: Assert empty NodeBalancer is created
      assert:
        that:
          - create_empty_nodebalancer.changed
          - create_empty_nodebalancer.configs|length == 0

    - name: Add NodeBalancer config
      linode.cloud.nodebalancer:
        label: '{{ create_empty_nodebalancer.node_balancer.label }}'
        region: us-ord
        client_conn_throttle: 6
        state: present
        configs:
          - port: 80
            protocol: http
            algorithm: roundrobin
      register: create_config

    - name: Assert nb config is added
      assert:
        that:
          - create_config.configs|length == 1
          - create_config.configs[0].port == 80

    - name: Update NodeBalancer config
      linode.cloud.nodebalancer:
        label: '{{ create_empty_nodebalancer.node_balancer.label }}'
        region: us-ord
        client_conn_throttle: 6
        state: present
        configs:
          - port: 80
            protocol: http
            algorithm: roundrobin
            check_timeout: 1
      register: update_config

    - name: Assert nb config is updated
      assert:
        that:
          - update_config.configs|length == 1
          - update_config.configs[0].check_timeout == 1
          
          - update_config.changed

    - name: Recreate NodeBalancer config
      linode.cloud.nodebalancer:
        label: '{{ create_empty_nodebalancer.node_balancer.label }}'
        region: us-ord
        client_conn_throttle: 6
        state: present
        configs:
          - port: 80
            protocol: http
            algorithm: roundrobin
            check_timeout: 1
            recreate: true
      register: recreate_config

    - name: Assert nb config is recreated
      assert:
        that:
          - recreate_config.changed
          - update_config.configs|length == 1

  always:
    - ignore_errors: yes
      block:
        - name: Delete the empty NodeBalancer
          linode.cloud.nodebalancer:
            label: '{{ create_empty_nodebalancer.node_balancer.label }}'
            state: absent
          register: delete_empty

        - name: Assert empty NodeBalancer delete
          assert:
            that:
              - delete_empty.changed
              - delete_empty.node_balancer.id == delete_empty.node_balancer.id

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'

