- name: volume_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Create Linode instance
      linode.cloud.instance:
        label: 'ansible-test-inst-{{ r }}'
        region: us-ord
        type: g6-standard-1
        image: linode/ubuntu22.04
        root_pass: Fn$$oobar123
        state: present
      register: create_inst

    - name: Assert instance is created
      assert:
        that:
          - create_inst.changed

    - name: Create a volume with an instance
      linode.cloud.volume:
        label: 'ansible-test-attached-{{ r }}'
        region: us-ord
        size: 30
        linode_id: '{{ create_inst.instance.id }}'
        state: present
      register: create_volume_inst

    - name: Assert attached volume is valid
      assert:
        that:
          - create_volume_inst.changed
          - create_volume_inst.volume.size == 30
          - create_volume_inst.volume.linode_id == create_inst.instance.id

    - name: Detach the attached volume
      linode.cloud.volume:
        label: '{{ create_volume_inst.volume.label }}'
        attached: false
        state: present
      register: detach_attached_volume
      until: detach_attached_volume.volume.linode_id == None
      retries: 5
      delay: 10

    - name: Create a volume without an instance
      linode.cloud.volume:
        label: 'ansible-test-{{ r }}'
        region: us-ord
        size: 42
        state: present
      register: create_volume_noinst

    - name: Assert volume is valid
      assert:
        that:
          - create_volume_noinst.changed
          - create_volume_noinst.volume.size == 42

    - name: Resize the volume
      linode.cloud.volume:
        label: '{{ create_volume_noinst.volume.label }}'
        size: 50
        state: present
      register: resize_volume_noinst

    - name: Assert volume is resized
      assert:
        that:
          - resize_volume_noinst.changed
          - resize_volume_noinst.volume.size == 50

    - name: Attach the volume to a Linode
      linode.cloud.volume:
        label: '{{ create_volume_noinst.volume.label }}'
        linode_id: '{{ create_inst.instance.id }}'
        state: present
      register: attach_volume

    - name: Assert the volume is attached
      assert:
        that:
          - attach_volume.changed
          - attach_volume.volume.linode_id == create_inst.instance.id

    - name: Get info about the volume by label
      linode.cloud.volume_info:
        label: '{{ create_volume_noinst.volume.label }}'
      register: volume_info_label

    - name: Assert the volume info is valid
      assert:
        that:
          - volume_info_label.volume.linode_id == attach_volume.volume.linode_id
          - volume_info_label.volume.size == attach_volume.volume.size

    - name: Detach the volume
      linode.cloud.volume:
        label: '{{ create_volume_noinst.volume.label }}'
        attached: false
        state: present
      register: detach_volume
      until: detach_volume.volume.linode_id == None
      retries: 5
      delay: 10

    - name: Assert the volume is detached
      assert:
        that:
          - detach_volume.changed
          - not detach_volume.volume.linode_id|d(False)
    
    - name: Clone a volume
      linode.cloud.volume: 
        source_volume_id: '{{create_volume_noinst.volume.id}}'
        label: 'cloned-volume-{{ r }}'
        region: '{{create_volume_noinst.volume.region}}'
        size: 50
        state: present
      register: cloned_volume

    - name: Assert cloned volume is valid
      assert:
        that:
          - cloned_volume.changed
          - cloned_volume.volume.size == 50

    - name: Attempt to clone a volume with mismatched regions
      linode.cloud.volume: 
        source_volume_id: '{{create_volume_noinst.volume.id}}'
        label: volume_clone
        region: us-south
        size: 50
        state: present
      register: cloned_volume_fail
      failed_when: '"Specified region does not match source volume region" not in cloned_volume_fail.msg'

    - name: Clone a volume with different specified size
      linode.cloud.volume: 
        source_volume_id: '{{create_volume_noinst.volume.id}}'
        label: 'cloned-volume-resize-{{ r }}'
        region: '{{create_volume_noinst.volume.region}}'
        size: 60
        state: present
      register: cloned_volume_resize

    - name: Assert cloned volume is valid and size was updated
      assert:
        that:
          - cloned_volume_resize.changed
          - cloned_volume_resize.volume.size == 60

    - name: Clone a volume with an attached linode instance
      linode.cloud.volume: 
        source_volume_id: '{{create_volume_noinst.volume.id}}'
        label: 'cloned-volume-attached-{{ r }}'
        region: '{{create_volume_noinst.volume.region}}'
        size: 50
        state: present
        linode_id: '{{ create_inst.instance.id }}'
      register: cloned_volume_attached

    - name: Detach the attached volume
      linode.cloud.volume:
        label: '{{ cloned_volume_attached.volume.label }}'
        attached: false
        state: present
      register: detach_attached_volume_clone
      until: detach_attached_volume_clone.volume.linode_id == None
      retries: 5
      delay: 10

    - name: Assert the cloned volume is attached and valid
      assert:
        that:
          - cloned_volume_attached.changed
          - cloned_volume_attached.volume.size == 50
          - cloned_volume_attached.volume.linode_id == create_inst.instance.id

    - name: Clone a volume with an attached linode instance and resize
      linode.cloud.volume: 
        source_volume_id: '{{create_volume_noinst.volume.id}}'
        label: 'cloned-attached-resize-{{ r }}'
        region: '{{create_volume_noinst.volume.region}}'
        size: 60
        state: present
        linode_id: '{{ create_inst.instance.id }}'
      register: cloned_volume_attached_resize

    - name: Detach the attached volume
      linode.cloud.volume:
        label: '{{ cloned_volume_attached_resize.volume.label }}'
        attached: false
        state: present
      register: detach_attached_volume_clone_2
      until: detach_attached_volume_clone_2.volume.linode_id == None
      retries: 5
      delay: 10

    - name: Assert the cloned volume is attached, resized, and valid
      assert:
        that:
          - cloned_volume_attached_resize.changed
          - cloned_volume_attached_resize.volume.size == 60
          - cloned_volume_attached_resize.volume.linode_id == create_inst.instance.id

  always:
    - ignore_errors: true
      block:
        - name: Delete the instance volume
          linode.cloud.volume:
            label: '{{ create_volume_inst.volume.label }}'
            state: absent
          register: delete_volume_inst

        - name: Assert the instance volume was deleted
          assert:
            that:
              - delete_volume_inst.changed

        - name: Delete the volume
          linode.cloud.volume:
            label: '{{ create_volume_noinst.volume.label }}'
            state: absent
          register: delete_volume_noinst
          until: delete_volume_noinst.changed
          retries: 5
          delay: 10

        - name: Assert the volume was deleted
          assert:
            that:
              - delete_volume_noinst.changed

        - name: Delete the instance
          linode.cloud.instance:
            label: '{{ create_inst.instance.label }}'
            state: absent
          register: delete_inst

        - name: Assert instance delete
          assert:
            that:
              - delete_inst.changed
              - delete_inst.instance.id == create_inst.instance.id

        - name: Delete the cloned volume
          linode.cloud.volume:
            label: '{{ cloned_volume.volume.label }}'
            state: absent
          register: delete_cloned_volume
          until: delete_cloned_volume.changed
          retries: 5
          delay: 10

        - name: Assert the volume was deleted
          assert:
            that:
              - delete_cloned_volume.changed

        - name: Delete the resized cloned volume
          linode.cloud.volume:
            label: '{{ cloned_volume_resize.volume.label }}'
            state: absent
          register: delete_cloned_volume_resize
          until: delete_cloned_volume_resize.changed
          retries: 5
          delay: 10

        - name: Assert the volume was deleted
          assert:
            that:
              - delete_cloned_volume_resize.changed

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'
