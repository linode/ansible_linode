- name: stackscript_info
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Create a basic stackscript
      linode.cloud.stackscript:
        label: 'ansible-test-{{ r }}'
        images: ['linode/alpine3.19']
        script: |
          #!/bin/bash
          # <UDF name="package" label="System Package to Install" example="nginx" default="">
          apt-get -q update && apt-get -q -y install $PACKAGE
        state: present
      register: create_stackscript

    - name: Assert stackscript is created
      assert:
        that:
          - create_stackscript.stackscript.id != None
          - create_stackscript.stackscript.rev_note == ''
          - create_stackscript.stackscript.description == ''
          - "'package' in create_stackscript.stackscript.script"

    - name: Get info about the StackScript by ID
      linode.cloud.stackscript_info:
        id: '{{ create_stackscript.stackscript.id }}'
      register: by_id

    - name: Get info about the StackScript by label
      linode.cloud.stackscript_info:
        label: '{{ create_stackscript.stackscript.label }}'
      register: by_label

    - name: Assert stackscript_info by label
      assert:
        that:
          - by_id.stackscript.id != None
          - by_id.stackscript.rev_note == ''
          - by_id.stackscript.description == ''
          - "'package' in by_id.stackscript.script"
          - by_label.stackscript.id != None
          - by_label.stackscript.rev_note == ''
          - by_label.stackscript.description == ''
          - "'package' in by_label.stackscript.script"

  always:
    - ignore_errors: yes
      block:
        - name: Delete stackscript
          linode.cloud.stackscript:
            label: '{{ create_stackscript.stackscript.label }}'
            state: absent

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'
