- name: object_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Get info about clusters in us-ord
      linode.cloud.object_cluster_info:
        region: us-ord
      register: info_by_region

    - name: Assert cluster information is valid
      assert:
        that:
          - info_by_region.clusters[0].id == 'us-ord-1'
          - info_by_region.clusters[0].region == 'us-ord'

    - name: Get info about cluster id us-ord-1
      linode.cloud.object_cluster_info:
        id: us-ord-1
      register: info_by_id

    - name: Assert cluster information is valid
      assert:
        that:
          - info_by_id.clusters[0].id == 'us-ord-1'
          - info_by_id.clusters[0].region == 'us-ord'

    - name: Create a Linode key
      linode.cloud.object_keys:
        label: 'test-ansible-key-{{ r }}'
        state: present
      register: create_key

    - name: Assert key created
      assert:
        that:
          - create_key.changed
          - 'not "REDACTED" in create_key.key.secret_key'

    - name: Create an S3 bucket
      amazon.aws.s3_bucket:
        s3_url: 'http://{{ info_by_id.clusters[0].domain }}/'
        aws_access_key: '{{ create_key.key.access_key }}'
        aws_secret_key: '{{ create_key.key.secret_key }}'
        name: 'test-ansible-bucket-{{ r }}'
        state: present
      register: create_bucket

    - name: Assert S3 bucket created
      assert:
        that:
          - create_bucket.changed

    - name: Create a Linode key with access restrictions
      linode.cloud.object_keys:
        label: 'test-ansible-key-access-{{ r }}'
        access:
          - cluster: us-ord-1
            bucket_name: '{{ create_bucket.name }}'
            permissions: read_write
          - cluster: us-ord-1
            bucket_name: '{{ create_bucket.name }}'
            permissions: read_only
        state: present
      register: create_access

    - name: Assert key created and access is valid
      assert:
        that:
          - create_access.changed
          - 'not "REDACTED" in create_access.key.secret_key'
          - create_access.key.bucket_access[0].cluster == 'us-ord-1'
          - create_access.key.bucket_access[0].bucket_name == create_bucket.name
          - create_access.key.bucket_access[0].permissions == 'read_write'
          - create_access.key.bucket_access[1].cluster == 'us-ord-1'
          - create_access.key.bucket_access[1].bucket_name == create_bucket.name
          - create_access.key.bucket_access[1].permissions == 'read_only'

  always:
    - ignore_errors: yes
      block:
      - name: Delete the S3 bucket
        amazon.aws.s3_bucket:
          s3_url: 'http://{{ info_by_id.clusters[0].domain }}/'
          aws_access_key: '{{ create_key.key.access_key }}'
          aws_secret_key: '{{ create_key.key.secret_key }}'
          name: '{{ create_bucket.name }}'
          state: absent
        register: delete_bucket

      - name: Assert S3 bucket deleted
        assert:
          that:
            - delete_bucket.changed

      - name: Remove the key
        linode.cloud.object_keys:
          
          
          label: '{{ create_key.key.label }}'
          state: absent
        register: delete

      - name: Assert key destroyed
        assert:
          that:
            - delete.changed
            - '"REDACTED" in delete.key.secret_key'

      - name: Remove the restricted key
        linode.cloud.object_keys:
          
          
          label: '{{ create_access.key.label }}'
          state: absent
        register: delete_access

      - name: Assert restricted key destroyed
        assert:
          that:
            - delete_access.changed
            - '"REDACTED" in delete_access.key.secret_key'

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'
