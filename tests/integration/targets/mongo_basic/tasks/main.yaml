- name: mongodb_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Create a database
      linode.cloud.database_mongodb:
        api_token: '{{ api_token }}'
        ua_prefix: '{{ ua_prefix }}'
        label: 'ansible-test-{{ r }}'
        region: us-east
        engine: mongodb
        type: g6-standard-1
        allow_list:
          - 0.0.0.0/0
        state: present
      register: db_create

    - assert:
        that:
          - db_create.database.allow_list | length == 1
          - db_create.database.allow_list[0] == '0.0.0.0/0'
          - db_create.database.engine == 'mongodb'
          - db_create.database.version == '8.0.26'
          - db_create.database.region == 'us-east'
          - db_create.database.type == 'g6-standard-1'

    - name: Get info about the database by ID
      linode.cloud.database_mongodb_info:
        api_token: '{{ api_token }}'
        ua_prefix: '{{ ua_prefix }}'
        id: '{{ db_create.database.id }}'
      register: by_id

    - name: Get info about the database by label
      linode.cloud.database_mongodb_info:
        api_token: '{{ api_token }}'
        ua_prefix: '{{ ua_prefix }}'
        label: '{{ db_create.database.label }}'
      register: by_label

    - assert:
        that:
          - by_label.database.allow_list | length == 1
          - by_label.database.allow_list[0] == '0.0.0.0/0'
          - by_label.database.engine == 'mongodb'
          - by_label.database.version == '8.0.26'
          - by_label.database.region == 'us-east'
          - by_label.database.type == 'g6-standard-1'
          - by_label.ssl_cert != None
          - by_label.credentials != None
          - by_label.backups != None
          - by_id.database.allow_list | length == 1
          - by_id.database.allow_list[0] == '0.0.0.0/0'
          - by_id.database.engine == 'mongodb'
          - by_id.database.version == '8.0.26'
          - by_id.database.region == 'us-east'
          - by_id.database.type == 'g6-standard-1'
          - by_id.ssl_cert != None
          - by_id.credentials != None
          - by_id.backups != None


    - name: Update the database
      linode.cloud.database_mongodb:
        api_token: '{{ api_token }}'
        ua_prefix: '{{ ua_prefix }}'
        label: 'ansible-test-{{ r }}'
        region: us-east
        engine: mongodb
        type: g6-standard-1
        allow_list:
          - 10.0.0.1/32
        state: present
      register: db_update

    - assert:
        that:
          - db_update.database.allow_list | length == 1
          - db_update.database.allow_list[0] == '10.0.0.1/32'

    # Let's test database_list here to speed up our test runs
    - name: Get all databases
      linode.cloud.database_list:
        api_token: '{{ api_token }}'
        ua_prefix: '{{ ua_prefix }}'
      register: all_dbs

    - assert:
        that:
          - all_dbs.databases | length > 0

#    This is not a collection-related issue, so we'll ignore this for now
#    - name: Filter to this database
#      linode.cloud.database_list:
#        api_token: '{{ api_token }}'
#        ua_prefix: '{{ ua_prefix }}'
#        filters:
#          - name: engine
#            values: mongodb
#          - name: label
#            values: '{{ db_create.database.label }}'
#      register: resolve_dbs
#
#    - assert:
#        that:
#          - resolve_dbs.databases | length == 1
#          - resolve_dbs.databases[0].label == db_create.database.label

    - name: Update the database
      linode.cloud.database_mongodb:
        api_token: '{{ api_token }}'
        ua_prefix: '{{ ua_prefix }}'
        label: 'ansible-test-{{ r }}'
        region: us-east
        engine: mongodb
        type: g6-standard-1
        allow_list:
          - 10.0.0.1/32
        cluster_size: 3
        state: present
      register: db_update_invalid
      failed_when: '"non-updatable" not in db_update_invalid.msg'

  always:
    - ignore_errors: yes
      block:
        - linode.cloud.database_mongodb:
            api_token: '{{ api_token }}'
            ua_prefix: '{{ ua_prefix }}'
            label: '{{ db_create.database.label }}'
            state: absent
