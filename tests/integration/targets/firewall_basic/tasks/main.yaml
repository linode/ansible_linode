- name: firewall_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"
    - name: Create a Linode Instance
      linode.cloud.instance:
        label: 'ansible-test-{{ r }}'
        region: us-southeast
        type: g6-standard-1
        image: linode/alpine3.17
        state: present
      register: create_instance

    - name: Create another Linode Instance
      linode.cloud.instance:
        label: 'ansible-test-{{ r }}-2'
        region: us-southeast
        type: g6-standard-1
        image: linode/alpine3.17
        state: present
      register: create_instance_2

    - name: Create a Linode Firewall
      linode.cloud.firewall:
        api_version: v4beta
        label: 'ansible-test-{{ r }}'
        devices: []
        rules:
          inbound: []
          inbound_policy: DROP
          outbound: []
          outbound_policy: DROP
        state: present
      register: create

    - name: Assert firewall created
      assert:
        that:
          - create.changed

    - name: Update a Linode Firewall
      linode.cloud.firewall:
        api_version: v4beta
        label: '{{ create.firewall.label }}'
        devices: []
        rules:
          inbound: []
          inbound_policy: DROP
          outbound: []
          outbound_policy: DROP
        status: disabled
        state: present
      register: update

    - name: Assert firewall updated
      assert:
        that:
          - update.changed
          - update.firewall.status == 'disabled'

    - name: Update Linode Firewall devices
      linode.cloud.firewall:
        api_version: v4beta
        label: '{{ create.firewall.label }}'
        devices:
          - id: '{{ create_instance.instance.id }}'
            type: 'linode'
        rules:
          inbound: []
          inbound_policy: DROP
          outbound: []
          outbound_policy: DROP
        status: disabled
        state: present
      register: update_devices

    - name: Assert firewall devices updated
      assert:
        that:
          - update_devices.changed
          - update_devices.devices|length == 1
          - update_devices.devices[0].entity.id == create_instance.instance.id
          - update_devices.devices[0].entity.type == 'linode'

    - name: Update Linode Firewall devices again
      linode.cloud.firewall:
        api_version: v4beta
        label: '{{ create.firewall.label }}'
        devices:
          - id: '{{ create_instance_2.instance.id }}'
            type: 'linode'
        rules:
          inbound: []
          inbound_policy: DROP
          outbound: []
          outbound_policy: DROP
        status: disabled
        state: present
      register: update_devices

    - name: Assert firewall devices updated
      assert:
        that:
          - update_devices.changed
          - update_devices.devices|length == 1
          - update_devices.devices[0].entity.id == create_instance_2.instance.id
          - update_devices.devices[0].entity.type == 'linode'

    - name: Update Linode Firewall devices unchanged
      linode.cloud.firewall:
        api_version: v4beta
        label: '{{ create.firewall.label }}'
        devices:
          - id: '{{ create_instance_2.instance.id }}'
            type: 'linode'
        rules:
          inbound: []
          inbound_policy: DROP
          outbound: []
          outbound_policy: DROP
        status: disabled
        state: present
      register: update_devices_unchanged

    - name: Assert firewall devices unchanged
      assert:
        that:
          - update_devices_unchanged.changed == false

    - name: Update Linode Firewall rules
      linode.cloud.firewall:
        api_version: v4beta
        label: '{{ create.firewall.label }}'
        devices: []
        rules:
          inbound:
            - label: cool-http-in
              addresses:
                ipv4: ['0.0.0.0/0']
                ipv6: ['ff00::/8']
              description: 'Really cool firewall rule.'
              ports: '80,443'
              protocol: TCP
              action: ACCEPT
          inbound_policy: DROP
          outbound:
            - label: cool-http-out
              addresses:
                ipv4: ['0.0.0.0/0']
                ipv6: ['ff00::/8']
              description: 'Really cool firewall rule.'
              ports: '80,443'
              protocol: TCP
              action: ACCEPT
          outbound_policy: DROP
        state: present
      register: updaterules

    - name: Assert firewall rules updated
      assert:
        that:
          - updaterules.changed

          - updaterules.devices|length == 0

          - updaterules.firewall.rules.inbound[0].label == 'cool-http-in'
          - updaterules.firewall.rules.inbound[0].description == 'Really cool firewall rule.'
          - updaterules.firewall.rules.inbound[0].ports == '80,443'
          - updaterules.firewall.rules.inbound[0].protocol == 'TCP'
          - updaterules.firewall.rules.inbound[0].action == 'ACCEPT'
          - updaterules.firewall.rules.inbound_policy == 'DROP'

          - updaterules.firewall.rules.outbound[0].label == 'cool-http-out'
          - updaterules.firewall.rules.outbound[0].description == 'Really cool firewall rule.'
          - updaterules.firewall.rules.outbound[0].ports == '80,443'
          - updaterules.firewall.rules.outbound[0].protocol == 'TCP'
          - updaterules.firewall.rules.outbound[0].action == 'ACCEPT'
          - updaterules.firewall.rules.outbound_policy == 'DROP'

    - name: Update a Linode Firewall rules unchanged
      linode.cloud.firewall:
        api_version: v4beta
        label: '{{ create.firewall.label }}'
        devices: []
        rules:
          inbound:
            - label: cool-http-in
              addresses:
                ipv4: ['0.0.0.0/0']
                ipv6: ['ff00::/8']
              description: 'Really cool firewall rule.'
              ports: '80,443'
              protocol: TCP
              action: ACCEPT
          inbound_policy: DROP
          outbound:
            - label: cool-http-out
              addresses:
                ipv4: ['0.0.0.0/0']
                ipv6: ['ff00::/8']
              description: 'Really cool firewall rule.'
              ports: '80,443'
              protocol: TCP
              action: ACCEPT
          outbound_policy: DROP
        state: present
      register: updaterules_unchanged

    - name: Assert firewall rules updated
      assert:
        that:
          - updaterules_unchanged.changed == false

    - name: Get info about the firewall
      linode.cloud.firewall_info:
        api_version: v4beta
        label: '{{ create.firewall.label }}'
      register: firewall_info

    - name: Assert firewall info
      assert:
        that:
          - firewall_info.devices|length == 0

          - firewall_info.firewall.id == create.firewall.id
          - firewall_info.firewall.status == 'disabled'

          - firewall_info.firewall.rules.inbound[0].label == updaterules.firewall.rules.inbound[0].label
          - firewall_info.firewall.rules.inbound[0].description == updaterules.firewall.rules.inbound[0].description
          - firewall_info.firewall.rules.inbound[0].ports == updaterules.firewall.rules.inbound[0].ports
          - firewall_info.firewall.rules.inbound[0].protocol == updaterules.firewall.rules.inbound[0].protocol
          - firewall_info.firewall.rules.inbound[0].action == updaterules.firewall.rules.inbound[0].action
          - firewall_info.firewall.rules.inbound_policy == updaterules.firewall.rules.inbound_policy

          - firewall_info.firewall.rules.outbound[0].label == updaterules.firewall.rules.outbound[0].label
          - firewall_info.firewall.rules.outbound[0].description == updaterules.firewall.rules.outbound[0].description
          - firewall_info.firewall.rules.outbound[0].ports == updaterules.firewall.rules.outbound[0].ports
          - firewall_info.firewall.rules.outbound[0].protocol == updaterules.firewall.rules.outbound[0].protocol
          - firewall_info.firewall.rules.outbound[0].action == updaterules.firewall.rules.outbound[0].action
          - firewall_info.firewall.rules.outbound_policy == updaterules.firewall.rules.outbound_policy
  always:
    - ignore_errors: yes
      block:
        - name: Delete a Linode Firewall
          linode.cloud.firewall:
            api_version: v4beta
            label: '{{ create.firewall.label }}'
            state: absent
          register: delete

        - name: Assert Firewall delete succeeded
          assert:
            that:
              - delete.changed
              - delete.firewall.id == create.firewall.id

        - name: Delete a Linode instance
          linode.cloud.instance:
            label: '{{ create_instance.instance.label }}'
            state: absent
          register: delete_instance

        - name: Assert instance delete succeeded
          assert:
            that:
              - delete_instance.changed
              - delete_instance.instance.id == create_instance.instance.id

        - name: Delete a Linode instance
          linode.cloud.instance:
            label: '{{ create_instance_2.instance.label }}'
            state: absent
          register: delete_instance_2

        - name: Assert instance delete succeeded
          assert:
            that:
              - delete_instance_2.changed
              - delete_instance_2.instance.id == create_instance_2.instance.id

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'