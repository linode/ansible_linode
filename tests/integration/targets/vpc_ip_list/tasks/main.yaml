- name: vpc_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Create a VPC
      linode.cloud.vpc:
        label: 'ansible-test-{{ r }}'
        region: us-mia
        description: test description
        state: present
      register: create_vpc

    - name: Assert VPC created
      assert:
        that:
          - create_vpc.changed
          - create_vpc.vpc.label == 'ansible-test-{{ r }}'
          - create_vpc.vpc.region == 'us-mia'
          - create_vpc.vpc.description == 'test description'

    - name: Create a subnet
      linode.cloud.vpc_subnet:
        vpc_id: '{{ create_vpc.vpc.id }}'
        label: 'test-subnet'
        ipv4: '10.0.0.0/24'
        state: present
      register: create_subnet

    - name: Assert Subnet created
      assert:
        that:
          - create_subnet.changed
          - create_subnet.subnet.label == 'test-subnet'
          - create_subnet.subnet.ipv4 == '10.0.0.0/24'
          - create_subnet.subnet.created != None
          - create_subnet.subnet.updated != None
          - create_subnet.subnet.linodes | length == 0

    - name: Create a Linode instance with interface
      linode.cloud.instance:
        label: 'ansible-test-{{ r }}'
        region: us-mia
        type: g6-nanode-1
        disks:
          - label: test-disk
            filesystem: ext4
            size: 25
        configs:
          - label: cool-config
            devices:
              sda:
                disk_label: test-disk
            interfaces:
              - purpose: vpc
                subnet_id: '{{ create_subnet.subnet.id }}'
                primary: true
                ipv4:
                  vpc: 10.0.0.3
                  nat_1_1: any
                ip_ranges: [ "10.0.0.5/32" ]
        wait: false
        booted: false
        state: present
      register: create_instance

    - name: Assert instance created
      assert:
        that:
          - create_instance.changed

          - create_instance.configs[0].interfaces[0].purpose == 'vpc'
          - create_instance.configs[0].interfaces[0].subnet_id == create_subnet.subnet.id
          - create_instance.configs[0].interfaces[0].vpc_id == create_vpc.vpc.id
          - create_instance.configs[0].interfaces[0].ip_ranges[0] == '10.0.0.5/32'
          - create_instance.configs[0].interfaces[0].ipv4.nat_1_1 == create_instance.instance.ipv4[0]
          - create_instance.configs[0].interfaces[0].ipv4.vpc == '10.0.0.3'

    - name: List VPC IPs
      linode.cloud.vpcs_ip_list:
      register: all_vpc_ips
    
    - name: Assert VPC IPs were returned
      assert:
        that:
          - all_vpc_ips.vpcs_ips[0].vpc_id == create_vpc.vpc.id
          - all_vpc_ips.vpcs_ips[1].vpc_id == create_vpc.vpc.id

    - name: List VPC IPs for a specific VPC
      linode.cloud.vpc_ip_list:
        vpc_id: '{{ create_vpc.vpc.id }}'
      register: vpcs_ips
    
    - name: Assert VPC IPs were returned
      assert:
        that:
          - vpcs_ips.vpcs_ips[0].vpc_id == create_vpc.vpc.id
          - vpcs_ips.vpcs_ips[1].vpc_id == create_vpc.vpc.id

  always:
    - ignore_errors: true
      block:
        - name: Delete a Linode instance
          linode.cloud.instance:
            label: '{{ create_instance.instance.label }}'
            state: absent
          register: delete_instance

        - name: Assert instance delete succeeded
          assert:
            that:
              - delete_instance.changed
              - delete_instance.instance.id == create_instance.instance.id

        - name: Delete a subnet
          linode.cloud.vpc_subnet:
            vpc_id: '{{ create_vpc.vpc.id }}'
            label: 'test-subnet'
            state: absent
          register: delete_subnet

        - name: Delete a VPC
          linode.cloud.vpc:
            label: '{{ create_vpc.vpc.label }}'
            state: absent
          register: delete_vpc

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'
