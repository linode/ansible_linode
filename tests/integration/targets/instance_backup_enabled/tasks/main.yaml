- name: instance_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Create a Linode instance without set backup to be enabled
      linode.cloud.instance:
        label: 'ansible-test-not-set-backup-{{ r }}'
        region: us-central
        type: g6-standard-1
        image: linode/ubuntu22.04
        wait: false
        state: present
      register: create_no_set_backup

    - name: Assert instance created
      assert:
        that:
          - create_no_set_backup.changed
          - create_no_set_backup.instance.backups.enabled == False

    - name: Create a Linode instance with backups enabled
      linode.cloud.instance:
        label: 'ansible-test-backups-enabled-{{ r }}'
        region: us-central
        type: g6-standard-1
        image: linode/ubuntu22.04
        wait: false
        state: present
        backups_enabled: true
      register: create_backups_enabled

    - name: Assert instance created
      assert:
        that:
          - create_backups_enabled.changed
          - create_backups_enabled.instance.backups.enabled == True

    - name: Cancel backups on backups enabled linode
      linode.cloud.instance:
        label: '{{ create_backups_enabled.instance.label }}'
        region: us-central
        type: g6-standard-1
        image: linode/ubuntu22.04
        wait: false
        state: present
        backups_enabled: False
      register: update_backups_canceled
    
    - name: Assert instance updated
      assert:
        that:
          - update_backups_canceled.changed
          - update_backups_canceled.instance.backups.enabled == False
    
    - name: Cancel backups on backups enabled linode
      linode.cloud.instance:
        label: '{{ create_no_set_backup.instance.label }}'
        region: us-central
        type: g6-standard-1
        image: linode/ubuntu22.04
        wait: false
        state: present
        backups_enabled: True
      register: update_backups_enabled
    
    - name: Assert instance updated
      assert:
        that:
          - update_backups_enabled.changed
          - update_backups_enabled.instance.backups.enabled == True
    # - name: Assert instance created
    #   assert:
    #     that:
    #       - create_additional_ips.changed
    #       - create_additional_ips.instance.ipv4|length == 3
    #       - create_additional_ips.networking.ipv4.public[0].address != None

    # - name: Update the instance region and type (recreate disallowed)
    #   linode.cloud.instance:
    #     label: '{{ create.instance.label }}'
    #     region: us-southeast
    #     group: funny
    #     type: g6-standard-2
    #     image: linode/ubuntu20.04
    #     private_ip: true
    #     state: present
    #   register: invalid_update
    #   failed_when:
    #     - invalid_update.changed == true

    # - name: Attempt to add additional ips to an instance
    #   linode.cloud.instance:
    #     label: '{{ create_additional_ips.instance.label }}'
    #     region: us-east
    #     type: g6-standard-1
    #     image: linode/ubuntu20.04
    #     private_ip: true
    #     wait: false
    #     state: present
    #     additional_ipv4:
    #       - public: true
    #       - public: true
    #   register: invalid_update_add_ips
    #   failed_when:
    #     - "'additional_ipv4' not in invalid_update_add_ips.msg"

    # - name: Attempt to remove additional ips from an instance
    #   linode.cloud.instance:
    #     label: '{{ create_additional_ips.instance.label }}'
    #     region: us-east
    #     type: g6-standard-1
    #     image: linode/ubuntu20.04
    #     private_ip: true
    #     wait: false
    #     state: present
    #   register: invalid_update_remove_ips
    #   failed_when:
    #     - "'additional_ipv4' not in invalid_update_remove_ips.msg"

    # - name: Update the instance
    #   linode.cloud.instance:
    #     label: '{{ create.instance.label }}'
    #     region: us-east
    #     group: funny
    #     type: g6-standard-1
    #     image: linode/ubuntu20.04
    #     private_ip: true
    #     state: present
    #   register: update

    # - name: Assert update
    #   assert:
    #     that:
    #       - update.instance.group == 'funny'

    # - name: Get info about the instance by id
    #   linode.cloud.instance_info:
    #     id: '{{ create.instance.id }}'
    #   register: info_id

    # - name: Assert instance info
    #   assert:
    #     that:
    #       - info_id.instance.ipv4|length > 1
    #       - info_id.instance.region == 'us-east'
    #       - info_id.configs|length == 1
    #       - info_id.networking.ipv4.public[0].address != None

    # - name: Get info about the instance by label
    #   linode.cloud.instance_info:
    #     label: '{{ create.instance.label }}'
    #   register: info_label

    # - name: Assert instance info
    #   assert:
    #     that:
    #       - info_label.instance.ipv4|length > 1
    #       - info_label.instance.region == 'us-east'
    #       - info_label.configs|length == 1

  always:
    - ignore_errors: true
      block:
        - name: Delete a Linode instance
          linode.cloud.instance:
            label: '{{ create_no_set_backup.instance.label }}'
            state: absent
          register: deletion1

        - name: Delete a Linode instance
          linode.cloud.instance:
            label: '{{ create_backups_enabled.instance.label }}'
            state: absent
          register: deletion2

        - name: Assert instance delete succeeded
          assert:
            that:
              - deletion1.changed
              - deletion1.instance.id == create_no_set_backup.instance.id
              - deletion2.changed
              - deletion2.instance.id == create_backups_enabled.instance.id

        # - name: Delete a Linode instance
        #   linode.cloud.instance:
        #     label: '{{ create_additional_ips.instance.label }}'
        #     state: absent
        #   register: delete_nopass_ips

        # - name: Assert instance delete succeeded
        #   assert:
        #     that:
        #       - delete_nopass_ips.changed
        #       - delete_nopass_ips.instance.id == create_additional_ips.instance.id

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'