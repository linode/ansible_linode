- name: nodebalancer_basic
  block:
    - set_fact:
        r: "{{ 1000000000 | random }}"

    - name: Create nodebalancer with basic configs
      linode.cloud.nodebalancer:
        label: 'ansible-nb-{{ r }}'
        region: us-ord
        state: present
        configs:
          - port: 80
            algorithm: roundrobin
            check: http
            check_attempts: 3
            check_interval: 90
            check_passive: false
            check_path: /
            check_timeout: 10
            cipher_suite: recommended
            protocol: http
            proxy_protocol: none
            stickiness: none
      register: nb

    - name: Assert nodebalancer is created with basic configs
      linode.cloud.instance:
        label: 'ansible-node-{{ r }}'
        region: '{{ nb.node_balancer.region }}'
        private_ip: true
        type: g6-standard-1
        state: present
      register: inst

    - name: Create nodebalancer_node
      linode.cloud.nodebalancer_node:
        nodebalancer_id: '{{ nb.node_balancer.id }}'
        config_id: '{{ nb.configs[0].id }}'

        label: 'cool'
        address: '{{ inst.instance.ipv4[1] }}:80'
        mode: accept
        weight: 10

        state: present
      register: nb_node

    - set_fact:
        inst_ipv4_address: "{{ inst.instance.ipv4[1] }}:80"

    - name: Assert nb node config
      assert:
        that:
          - nb_node.changed
          - nb_node.node.label == 'cool'
          - nb_node.node.address == inst_ipv4_address
          - nb_node.node.mode == 'accept'
          - nb_node.node.weight == 10

    - name: Update nodebalancer node config
      linode.cloud.nodebalancer_node:
        nodebalancer_id: '{{ nb.node_balancer.id }}'
        config_id: '{{ nb.configs[0].id }}'

        label: 'cool'
        address: '{{ inst.instance.ipv4[1] }}:80'
        mode: reject
        weight: 15

        state: present
      register: nb_node_update

    - name: Assert nb node config is updated
      assert:
        that:
          - nb_node_update.changed
          - nb_node_update.node.label == 'cool'
          - nb_node_update.node.address == inst_ipv4_address
          - nb_node_update.node.mode == 'reject'
          - nb_node_update.node.weight == 15

    - name: Create a populated NodeBalancer
      linode.cloud.nodebalancer:
        label: 'ansible-nb-{{ r }}'
        region: us-ord
        state: present
        configs:
          - port: 80
            algorithm: roundrobin
            check: http
            check_attempts: 3
            check_interval: 90
            check_passive: false
            check_path: /
            check_timeout: 10
            cipher_suite: recommended
            protocol: http
            proxy_protocol: none
            stickiness: none
      register: nb_update

    - debug:
        var: nb_update

    - name: Get nodebalancer_info
      linode.cloud.nodebalancer_info:
        label: 'ansible-nb-{{ r }}'
      register: nb_info

    - name: Assert nb config
      assert:
        that:
          - nb_update.changed == False
          - nb_update.nodes[0].id == nb_node.node.id
          - nb_info.nodes[0].id == nb_node.node.id

  always:
    - ignore_errors: yes
      block:
        - name: Delete nodebalancer node
          linode.cloud.nodebalancer_node:
            nodebalancer_id: '{{ nb.node_balancer.id }}'
            config_id: '{{ nb.configs[0].id }}'
            label: '{{ nb_node.node.label }}'

            state: absent

        - name: Delete instance
          linode.cloud.instance:
            label: '{{ inst.instance.label }}'
            state: absent

        - name: Delete nodebalancer
          linode.cloud.nodebalancer:
            label: '{{ nb.node_balancer.label }}'
            state: absent

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'

