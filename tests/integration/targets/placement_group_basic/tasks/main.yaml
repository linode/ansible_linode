- name: placement_group_basic
  block:
    - set_fact:
          r: "{{ 1000000000 | random }}"

    - name: List regions that support PGs
      linode.cloud.region_list: {}
      register: valid_regions

    - set_fact:
        region: '{{ (valid_regions.regions | selectattr("capabilities", "search", "Placement Group") | list)[0].id }}'

    - name: Create a Linode placement group
      linode.cloud.placement_group:
        label: 'ansible-test-{{ r }}'
        region: '{{ region }}'
        placement_group_type: anti_affinity:local
        placement_group_policy: flexible
        state: present
      register: pg_created

    - name: Assert placement group is created
      assert:
        that:
          - pg_created.placement_group.region == region
          - pg_created.placement_group.placement_group_type == 'anti_affinity:local'
          - pg_created.placement_group.placement_group_policy == 'flexible'

    - name: Update a Linode placement group label
      linode.cloud.placement_group:
        id: '{{ pg_created.placement_group.id }}'
        label: '{{ pg_created.placement_group.label }}-updated'
        state: present
      register: pg_updated

    - name: Assert placement group is updated
      assert:
        that:
          - pg_updated.changed

    - name: Delete a placement group
      linode.cloud.placement_group:
        label: '{{ pg_updated.placement_group.label }}'
        state: absent
      register: pg_deleted

    - name: Assert placement group is deleted
      assert:
        that:
          - pg_deleted.changed
          - pg_deleted.placement_group.id == pg_created.placement_group.id

  environment:
    LINODE_UA_PREFIX: '{{ ua_prefix }}'
    LINODE_API_TOKEN: '{{ api_token }}'
    LINODE_API_URL: '{{ api_url }}'
    LINODE_API_VERSION: '{{ api_version }}'
    LINODE_CA: '{{ ca_file or "" }}'
